{"ast":null,"code":"var _jsxFileName = \"/home/muskan/imgFrontend/img-ann/src/components/HomePage.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css'; // Import custom CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HomePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      details: [],\n      user: \"\",\n      image: null,\n      // State to store uploaded image\n      imagePreview: null,\n      // State to store image preview\n      annotate: \"\",\n      // State to store selected annotation\n      captions: [\"None\", \"airplanes\", \"cars\", \"birds\", \"cats\", \"deer\", \"dogs\", \"frogs\", \"horses\", \"ships\", \"trucks\"],\n      // Dropdown options\n      annotations: [\"None\"],\n      width: \"\",\n      // State to store width input\n      height: \"\",\n      // State to store height input\n      filters: [\"None\", \"Grayscale\", \"Sepia\", \"Invert\", \"Blur\", \"Brightness\", \"Contrast\"],\n      // Filter options\n      selectedFilter: \"None\"\n    };\n    this.handleInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleImageChange = e => {\n      const file = e.target.files[0];\n\n      // Update image state\n      this.setState({\n        image: file\n      });\n\n      // Create a FileReader instance\n      const reader = new FileReader();\n\n      // Listen for the FileReader load event\n      reader.onloadend = () => {\n        // Create a new image element\n        const image = new Image();\n        image.src = reader.result;\n\n        // When the image loads, resize it if width and height are provided\n        image.onload = () => {\n          if (this.state.width && this.state.height) {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n\n            // Set canvas dimensions to the desired width and height\n            canvas.width = this.state.width;\n            canvas.height = this.state.height;\n\n            // Draw the image onto the canvas with the specified dimensions\n            ctx.drawImage(image, 0, 0, this.state.width, this.state.height);\n\n            // Get the data URL of the resized image\n            const resizedImagePreview = canvas.toDataURL('image/jpeg');\n\n            // Update imagePreview state\n            this.setState({\n              imagePreview: resizedImagePreview\n            });\n          } else {\n            // If no width and height provided, set imagePreview to original image\n            this.setState({\n              imagePreview: reader.result\n            });\n          }\n        };\n      };\n\n      // Read the image file as a data URL\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    };\n    // handleSubmit = (e) => {\n    //     e.preventDefault();\n    //     const formData = new FormData();\n    //     formData.append(\"name\", this.state.user);\n    //     formData.append(\"annotations\", JSON.stringify(this.state.annotations));\n    //     formData.append(\"width\", this.state.width);\n    //     formData.append(\"height\", this.state.height);\n    //     // Check if both width and height are provided\n    //     if (this.state.width && this.state.height) {\n    //         // Resize the image before uploading\n    //         this.resizeImage(this.state.image, this.state.width, this.state.height)\n    //             .then(resizedImageBlob => {\n    //                 formData.append(\"image\", resizedImageBlob, this.state.image.name);\n    //                 // Upload the resized image\n    //                 this.uploadFormData(formData);\n    //             })\n    //             .catch(error => {\n    //                 console.error(\"Error resizing image:\", error);\n    //             });\n    //     } else {\n    //         // If width and height are not provided, upload the original image without resizing\n    //         formData.append(\"image\", this.state.image);\n    //         // Upload the original image\n    //         this.uploadFormData(formData);\n    //     }\n    // };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append(\"name\", this.state.user);\n      formData.append(\"annotations\", JSON.stringify(this.state.annotations));\n      formData.append(\"width\", this.state.width);\n      formData.append(\"height\", this.state.height);\n\n      // Check if both width and height are provided\n      if (this.state.width && this.state.height) {\n        // Resize the image before applying the filter\n        this.resizeImage(this.state.image, this.state.width, this.state.height).then(resizedImageBlob => {\n          // Apply filter to the resized image\n          this.applyFilterToImage(resizedImageBlob, formData);\n        }).catch(error => {\n          console.error(\"Error resizing image:\", error);\n        });\n      } else {\n        // If width and height are not provided, apply filter to the original image\n        this.applyFilterToImage(this.state.image, formData);\n      }\n    };\n    this.uploadFormData = formData => {\n      // Upload the form data\n      axios.post(\"http://localhost:8000/wel/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log(\"res = \", res);\n\n        // Make a GET request to fetch the updated data after a successful POST\n        axios.get(\"http://localhost:8000/wel/\").then(response => {\n          this.setState({\n            details: response.data,\n            user: \"\",\n            image: null,\n            imagePreview: null,\n            annotations: [],\n            width: \"\",\n            height: \"\"\n          });\n        }).catch(err => {\n          console.error(\"Error fetching data:\", err);\n        });\n      }).catch(err => {\n        console.error(\"Error:\", err);\n      });\n    };\n    this.resizeImage = (imageFile, width, height) => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(imageFile);\n        reader.onload = event => {\n          const img = new Image();\n          img.src = event.target.result;\n          img.onload = () => {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            canvas.width = width;\n            canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n            canvas.toBlob(blob => {\n              resolve(blob);\n            }, 'image/jpeg', 1);\n          };\n          img.onerror = error => {\n            reject(error);\n          };\n        };\n        reader.onerror = error => {\n          reject(error);\n        };\n      });\n    };\n    this.applyFilter = () => {\n      const {\n        selectedFilter,\n        image\n      } = this.state;\n\n      // If no image is selected or the selected filter is \"None\", set imagePreview to original image\n      if (!image || selectedFilter === \"None\") {\n        this.setState({\n          imagePreview: this.state.image ? URL.createObjectURL(this.state.image) : null\n        });\n        return;\n      }\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.src = URL.createObjectURL(image);\n      img.onload = () => {\n        // Set canvas dimensions to the image dimensions\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        // Draw the original image onto the canvas\n        ctx.drawImage(img, 0, 0, img.width, img.height);\n\n        // Apply the selected filter\n        switch (selectedFilter) {\n          case \"Grayscale\":\n            ctx.filter = \"grayscale(100%)\";\n            break;\n          case \"Sepia\":\n            ctx.filter = \"sepia(100%)\";\n            break;\n          case \"Invert\":\n            ctx.filter = \"invert(100%)\";\n            break;\n          case \"Blur\":\n            ctx.filter = \"blur(5px)\";\n            break;\n          case \"Brightness\":\n            ctx.filter = \"brightness(200%)\";\n            break;\n          case \"Contrast\":\n            ctx.filter = \"contrast(200%)\";\n            break;\n          default:\n            ctx.filter = \"none\";\n        }\n\n        // Clear the canvas and draw the modified image\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, img.width, img.height);\n\n        // Get the data URL of the modified image\n        const filteredImagePreview = canvas.toDataURL('image/jpeg');\n\n        // Update imagePreview state\n        this.setState({\n          imagePreview: filteredImagePreview\n        });\n      };\n    };\n    this.handleFilterChange = e => {\n      this.setState({\n        selectedFilter: e.target.value\n      }, () => {\n        // Apply the selected filter to the image preview\n        this.applyFilter();\n      });\n    };\n    this.handleAnnotationChange = e => {\n      const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n      this.setState({\n        annotations: selectedOptions\n      });\n    };\n  }\n  componentDidMount() {\n    let data;\n    axios.get(\"http://localhost:8000/wel/\").then(res => {\n      data = res.data;\n      this.setState({\n        details: data\n      });\n    }).catch(err => {});\n  }\n  render() {\n    const pendingImages = this.state.details.filter(detail => detail.annotations.includes(\"None\"));\n    const annotatedImages = this.state.details.filter(detail => !detail.annotations.includes(\"None\"));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card shadow-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"card-title text-center mb-4\",\n                children: \"Image Annotation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"author\",\n                    style: {\n                      fontSize: \"20px\"\n                    },\n                    children: \"Author\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"author\",\n                    placeholder: \"Enter author name\",\n                    value: this.state.user,\n                    name: \"user\",\n                    onChange: this.handleInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"imageUpload\",\n                    style: {\n                      fontSize: \"20px\"\n                    },\n                    children: \"Upload Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom-file\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      className: \"custom-file-input\",\n                      id: \"imageUpload\",\n                      onChange: this.handleImageChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"width\",\n                    style: {\n                      fontSize: \"20px\"\n                    },\n                    children: \"Width\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    id: \"width\",\n                    placeholder: \"Enter width\",\n                    value: this.state.width,\n                    name: \"width\",\n                    onChange: this.handleInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"height\",\n                    style: {\n                      fontSize: \"20px\"\n                    },\n                    children: \"Height\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    id: \"height\",\n                    placeholder: \"Enter height\",\n                    value: this.state.height,\n                    name: \"height\",\n                    onChange: this.handleInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 37\n                }, this), this.state.imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: this.state.imagePreview,\n                    alt: \"Preview\",\n                    className: \"img-fluid\",\n                    style: {\n                      maxWidth: \"300px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"filters\",\n                    style: {\n                      fontSize: \"20px\"\n                    },\n                    children: \"Filters\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-control\",\n                    id: \"filters\",\n                    value: this.state.selectedFilter,\n                    onChange: this.handleFilterChange,\n                    name: \"filters\",\n                    children: this.state.filters.map((filter, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: filter,\n                      children: filter\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 37\n                }, this), this.state.imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: this.state.imagePreview,\n                    alt: \"Preview\",\n                    className: \"img-fluid\",\n                    style: {\n                      maxWidth: \"300px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"annotations\",\n                    style: {\n                      fontSize: \"20px\"\n                    },\n                    children: \"Annotations\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 41\n                  }, this), \"Keep CTRL pressed and click on the annotation to select multiple annotations\", /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-control\",\n                    id: \"annotations\",\n                    value: this.state.annotations,\n                    onChange: this.handleAnnotationChange,\n                    name: \"annotations\",\n                    multiple: true,\n                    children: this.state.captions.map((annotate, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: annotate,\n                      children: annotate\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-block mt-4\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center mb-4\",\n            children: \"Pending Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-grid\",\n            children: pendingImages.map((detail, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: [\"User: \", detail.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: detail.image_url,\n                  alt: \"Image\",\n                  className: \"img-fluid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: \"Annotations:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"list-unstyled\",\n                    children: detail.annotations.map((annotation, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: annotation\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 37\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center mb-4\",\n            children: \"Annotated Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-grid\",\n            children: annotatedImages.map((detail, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: [\"User: \", detail.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: detail.image_url,\n                  alt: \"Image\",\n                  className: \"img-fluid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: \"Annotations:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"list-unstyled\",\n                    children: detail.annotations.map((annotation, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: annotation\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 37\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default HomePage;","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","HomePage","Component","constructor","args","state","details","user","image","imagePreview","annotate","captions","annotations","width","height","filters","selectedFilter","handleInput","e","setState","target","name","value","handleImageChange","file","files","reader","FileReader","onloadend","Image","src","result","onload","canvas","document","createElement","ctx","getContext","drawImage","resizedImagePreview","toDataURL","readAsDataURL","handleSubmit","preventDefault","formData","FormData","append","JSON","stringify","resizeImage","then","resizedImageBlob","applyFilterToImage","catch","error","console","uploadFormData","post","headers","res","log","get","response","data","err","imageFile","Promise","resolve","reject","event","img","toBlob","blob","onerror","applyFilter","URL","createObjectURL","filter","clearRect","filteredImagePreview","handleFilterChange","handleAnnotationChange","selectedOptions","Array","from","option","componentDidMount","render","pendingImages","detail","includes","annotatedImages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","style","fontSize","type","id","placeholder","onChange","alt","maxWidth","map","index","multiple","image_url","annotation"],"sources":["/home/muskan/imgFrontend/img-ann/src/components/HomePage.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css'; // Import custom CSS for styling\n\nclass HomePage extends React.Component {\n    state = {\n        details: [],\n        user: \"\",\n        image: null, // State to store uploaded image\n        imagePreview: null, // State to store image preview\n        annotate: \"\", // State to store selected annotation\n        captions: [\"None\", \"airplanes\", \"cars\", \"birds\", \"cats\", \"deer\", \"dogs\", \"frogs\", \"horses\", \"ships\", \"trucks\"], // Dropdown options\n        annotations: [\"None\"],\n        width: \"\", // State to store width input\n        height: \"\", // State to store height input\n        filters: [\"None\", \"Grayscale\", \"Sepia\", \"Invert\", \"Blur\", \"Brightness\", \"Contrast\"], // Filter options\n        selectedFilter: \"None\",\n    };\n\n    componentDidMount() {\n        let data;\n\n        axios\n            .get(\"http://localhost:8000/wel/\")\n            .then((res) => {\n                data = res.data;\n                this.setState({\n                    details: data,\n                });\n            })\n            .catch((err) => { });\n    }\n\n    handleInput = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    handleImageChange = (e) => {\n        const file = e.target.files[0];\n\n        // Update image state\n        this.setState({\n            image: file,\n        });\n\n        // Create a FileReader instance\n        const reader = new FileReader();\n\n        // Listen for the FileReader load event\n        reader.onloadend = () => {\n            // Create a new image element\n            const image = new Image();\n            image.src = reader.result;\n\n            // When the image loads, resize it if width and height are provided\n            image.onload = () => {\n                if (this.state.width && this.state.height) {\n                    const canvas = document.createElement('canvas');\n                    const ctx = canvas.getContext('2d');\n\n                    // Set canvas dimensions to the desired width and height\n                    canvas.width = this.state.width;\n                    canvas.height = this.state.height;\n\n                    // Draw the image onto the canvas with the specified dimensions\n                    ctx.drawImage(image, 0, 0, this.state.width, this.state.height);\n\n                    // Get the data URL of the resized image\n                    const resizedImagePreview = canvas.toDataURL('image/jpeg');\n\n                    // Update imagePreview state\n                    this.setState({\n                        imagePreview: resizedImagePreview,\n                    });\n                } else {\n                    // If no width and height provided, set imagePreview to original image\n                    this.setState({\n                        imagePreview: reader.result,\n                    });\n                }\n            };\n        };\n\n        // Read the image file as a data URL\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    };\n\n    // handleSubmit = (e) => {\n    //     e.preventDefault();\n\n    //     const formData = new FormData();\n    //     formData.append(\"name\", this.state.user);\n    //     formData.append(\"annotations\", JSON.stringify(this.state.annotations));\n    //     formData.append(\"width\", this.state.width);\n    //     formData.append(\"height\", this.state.height);\n\n    //     // Check if both width and height are provided\n    //     if (this.state.width && this.state.height) {\n    //         // Resize the image before uploading\n    //         this.resizeImage(this.state.image, this.state.width, this.state.height)\n    //             .then(resizedImageBlob => {\n    //                 formData.append(\"image\", resizedImageBlob, this.state.image.name);\n\n    //                 // Upload the resized image\n    //                 this.uploadFormData(formData);\n    //             })\n    //             .catch(error => {\n    //                 console.error(\"Error resizing image:\", error);\n    //             });\n    //     } else {\n    //         // If width and height are not provided, upload the original image without resizing\n    //         formData.append(\"image\", this.state.image);\n\n    //         // Upload the original image\n    //         this.uploadFormData(formData);\n    //     }\n    // };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append(\"name\", this.state.user);\n        formData.append(\"annotations\", JSON.stringify(this.state.annotations));\n        formData.append(\"width\", this.state.width);\n        formData.append(\"height\", this.state.height);\n\n        // Check if both width and height are provided\n        if (this.state.width && this.state.height) {\n            // Resize the image before applying the filter\n            this.resizeImage(this.state.image, this.state.width, this.state.height)\n                .then(resizedImageBlob => {\n                    // Apply filter to the resized image\n                    this.applyFilterToImage(resizedImageBlob, formData);\n                })\n                .catch(error => {\n                    console.error(\"Error resizing image:\", error);\n                });\n        } else {\n            // If width and height are not provided, apply filter to the original image\n            this.applyFilterToImage(this.state.image, formData);\n        }\n    };\n\n    uploadFormData = (formData) => {\n        // Upload the form data\n        axios\n            .post(\"http://localhost:8000/wel/\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => {\n                console.log(\"res = \", res);\n\n                // Make a GET request to fetch the updated data after a successful POST\n                axios\n                    .get(\"http://localhost:8000/wel/\")\n                    .then((response) => {\n                        this.setState({\n                            details: response.data,\n                            user: \"\",\n                            image: null,\n                            imagePreview: null,\n                            annotations: [],\n                            width: \"\",\n                            height: \"\",\n                        });\n                    })\n                    .catch((err) => {\n                        console.error(\"Error fetching data:\", err);\n                    });\n            })\n            .catch((err) => {\n                console.error(\"Error:\", err);\n            });\n    };\n\n\n    resizeImage = (imageFile, width, height) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(imageFile);\n            reader.onload = event => {\n                const img = new Image();\n                img.src = event.target.result;\n                img.onload = () => {\n                    const canvas = document.createElement('canvas');\n                    const ctx = canvas.getContext('2d');\n                    canvas.width = width;\n                    canvas.height = height;\n                    ctx.drawImage(img, 0, 0, width, height);\n                    canvas.toBlob(blob => {\n                        resolve(blob);\n                    }, 'image/jpeg', 1);\n                };\n                img.onerror = error => {\n                    reject(error);\n                };\n            };\n            reader.onerror = error => {\n                reject(error);\n            };\n        });\n    };\n\n    applyFilter = () => {\n        const { selectedFilter, image } = this.state;\n\n        // If no image is selected or the selected filter is \"None\", set imagePreview to original image\n        if (!image || selectedFilter === \"None\") {\n            this.setState({\n                imagePreview: this.state.image ? URL.createObjectURL(this.state.image) : null,\n            });\n            return;\n        }\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const img = new Image();\n        img.src = URL.createObjectURL(image);\n\n        img.onload = () => {\n            // Set canvas dimensions to the image dimensions\n            canvas.width = img.width;\n            canvas.height = img.height;\n\n            // Draw the original image onto the canvas\n            ctx.drawImage(img, 0, 0, img.width, img.height);\n\n            // Apply the selected filter\n            switch (selectedFilter) {\n                case \"Grayscale\":\n                    ctx.filter = \"grayscale(100%)\";\n                    break;\n                case \"Sepia\":\n                    ctx.filter = \"sepia(100%)\";\n                    break;\n                case \"Invert\":\n                    ctx.filter = \"invert(100%)\";\n                    break;\n                case \"Blur\":\n                    ctx.filter = \"blur(5px)\";\n                    break;\n                case \"Brightness\":\n                    ctx.filter = \"brightness(200%)\";\n                    break;\n                case \"Contrast\":\n                    ctx.filter = \"contrast(200%)\";\n                    break;\n                default:\n                    ctx.filter = \"none\";\n            }\n\n            // Clear the canvas and draw the modified image\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.drawImage(img, 0, 0, img.width, img.height);\n\n            // Get the data URL of the modified image\n            const filteredImagePreview = canvas.toDataURL('image/jpeg');\n\n            // Update imagePreview state\n            this.setState({\n                imagePreview: filteredImagePreview,\n            });\n        };\n    };\n\n\n    handleFilterChange = (e) => {\n        this.setState({\n            selectedFilter: e.target.value,\n        }, () => {\n            // Apply the selected filter to the image preview\n            this.applyFilter();\n        });\n    };\n\n    handleAnnotationChange = (e) => {\n        const selectedOptions = Array.from(e.target.selectedOptions, (option) => option.value);\n        this.setState({ annotations: selectedOptions });\n    };\n\n    render() {\n        const pendingImages = this.state.details.filter(detail => detail.annotations.includes(\"None\"));\n        const annotatedImages = this.state.details.filter(detail => !detail.annotations.includes(\"None\"));\n\n        return (\n            <div className=\"container py-5\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-8\">\n                        <div className=\"card shadow-sm\">\n                            <div className=\"card-body\">\n                                <h2 className=\"card-title text-center mb-4\">Image Annotation</h2>\n                                <form onSubmit={this.handleSubmit}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"author\" style={{ fontSize: \"20px\" }}>Author</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            id=\"author\"\n                                            placeholder=\"Enter author name\"\n                                            value={this.state.user}\n                                            name=\"user\"\n                                            onChange={this.handleInput}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"imageUpload\" style={{ fontSize: \"20px\" }}>Upload Image</label>\n                                        <br />\n\n                                        <div className=\"custom-file\">\n                                            <input\n                                                type=\"file\"\n                                                className=\"custom-file-input\"\n                                                id=\"imageUpload\"\n                                                onChange={this.handleImageChange}\n                                            />\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"width\" style={{ fontSize: \"20px\" }}>Width</label>\n                                        <input\n                                            type=\"number\"\n                                            className=\"form-control\"\n                                            id=\"width\"\n                                            placeholder=\"Enter width\"\n                                            value={this.state.width}\n                                            name=\"width\"\n                                            onChange={this.handleInput}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"height\" style={{ fontSize: \"20px\" }}>Height</label>\n                                        <input\n                                            type=\"number\"\n                                            className=\"form-control\"\n                                            id=\"height\"\n                                            placeholder=\"Enter height\"\n                                            value={this.state.height}\n                                            name=\"height\"\n                                            onChange={this.handleInput}\n                                        />\n                                    </div>\n\n                                    {this.state.imagePreview && (\n                                        <div className=\"text-center mt-3\">\n                                            <img\n                                                src={this.state.imagePreview}\n                                                alt=\"Preview\"\n                                                className=\"img-fluid\"\n                                                style={{ maxWidth: \"300px\" }}\n                                            />\n                                        </div>\n                                    )}\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"filters\" style={{ fontSize: \"20px\" }}>Filters</label>\n                                        <select\n                                            className=\"form-control\"\n                                            id=\"filters\"\n                                            value={this.state.selectedFilter}\n                                            onChange={this.handleFilterChange}\n                                            name=\"filters\"\n                                        >\n                                            {this.state.filters.map((filter, index) => (\n                                                <option key={index} value={filter}>\n                                                    {filter}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    </div>\n\n                                    {/* Image preview */}\n                                    {this.state.imagePreview && (\n                                        <div className=\"text-center mt-3\">\n                                            <img\n                                                src={this.state.imagePreview}\n                                                alt=\"Preview\"\n                                                className=\"img-fluid\"\n                                                style={{ maxWidth: \"300px\" }}\n                                            />\n                                        </div>\n                                    )}\n                                    <div className=\"form-group\">\n\n                                        <label htmlFor=\"annotations\" style={{ fontSize: \"20px\" }}>Annotations</label>\n\n                                        <br />\n                                        Keep CTRL pressed and click on the annotation to select multiple annotations\n\n                                        <select\n                                            className=\"form-control\"\n                                            id=\"annotations\"\n                                            value={this.state.annotations}\n                                            onChange={this.handleAnnotationChange}\n                                            name=\"annotations\"\n                                            multiple\n                                        >\n                                            {this.state.captions.map((annotate, index) => (\n                                                <option key={index} value={annotate}>\n                                                    {annotate}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    </div>\n\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block mt-4\">\n                                        Submit\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                    <div className=\"col-md-6\">\n                        <h3 className=\"text-center mb-4\">Pending Images</h3>\n                        <div className=\"image-grid\">\n                            {pendingImages.map((detail, id) => (\n                                <div key={id} className=\"image-card\">\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">User: {detail.name}</h5>\n                                        <img\n                                            src={detail.image_url}\n                                            alt=\"Image\"\n                                            className=\"img-fluid\"\n                                        />\n                                        <div className=\"mt-3\">\n                                            <h6>Annotations:</h6>\n                                            <ul className=\"list-unstyled\">\n                                                {detail.annotations.map((annotation, index) => (\n                                                    <li key={index}>{annotation}</li>\n                                                ))}\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    {/* <div className=\"col-md-6 vertical-line\"></div>  */}\n                    <div className=\"col-md-6\">\n                        <h3 className=\"text-center mb-4\">Annotated Images</h3>\n                        <div className=\"image-grid\">\n                            {annotatedImages.map((detail, id) => (\n                                <div key={id} className=\"image-card\">\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">User: {detail.name}</h5>\n                                        <img\n                                            src={detail.image_url}\n                                            alt=\"Image\"\n                                            className=\"img-fluid\"\n                                        />\n                                        <div className=\"mt-3\">\n                                            <h6>Annotations:</h6>\n                                            <ul className=\"list-unstyled\">\n                                                {detail.annotations.map((annotation, index) => (\n                                                    <li key={index}>{annotation}</li>\n                                                ))}\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}