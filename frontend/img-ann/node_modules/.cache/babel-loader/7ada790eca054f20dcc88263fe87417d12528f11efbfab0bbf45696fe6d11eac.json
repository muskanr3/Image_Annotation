{"ast":null,"code":"var _jsxFileName = \"/home/muskan/Documents/imgFrontend/img-ann/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      details: [],\n      user: \"\",\n      image: null,\n      imagePreview: null,\n      selectedAnnotations: [],\n      // State to store selected annotations\n      captions: [\"airplanes\", \"cars\", \"birds\", \"cats\", \"deer\", \"dogs\", \"frogs\", \"horses\", \"ships\", \"trucks\"]\n    };\n    this.handleInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleImageChange = e => {\n      const file = e.target.files[0];\n      this.setState({\n        image: file\n      });\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        this.setState({\n          imagePreview: reader.result\n        });\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    };\n    this.handleAnnotationChange = e => {\n      const {\n        value,\n        checked\n      } = e.target;\n      let selectedAnnotations = [...this.state.selectedAnnotations];\n      if (checked) {\n        selectedAnnotations.push(value);\n      } else {\n        selectedAnnotations = selectedAnnotations.filter(annotation => annotation !== value);\n      }\n      this.setState({\n        selectedAnnotations\n      });\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append(\"name\", this.state.user);\n      formData.append(\"image\", this.state.image);\n      formData.append(\"annotations\", JSON.stringify(this.state.selectedAnnotations));\n      axios.post(\"http://localhost:8000/wel/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log(\"res = \", res);\n        this.setState({\n          user: \"\",\n          image: null,\n          imagePreview: null,\n          selectedAnnotations: []\n        });\n      }).catch(err => {\n        console.error(\"Error:\", err);\n      });\n    };\n  }\n  componentDidMount() {\n    let data;\n    axios.get(\"http://localhost:8000/wel/\").then(res => {\n      data = res.data;\n      this.setState({\n        details: data\n      });\n    }).catch(err => {});\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container jumbotron \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: \"Annotation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), this.state.captions.map((annotate, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              id: `annotate-${index}`,\n              value: annotate,\n              onChange: this.handleAnnotationChange,\n              checked: this.state.selectedAnnotations.includes(annotate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: `annotate-${index}`,\n              children: annotate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mb-5\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","App","Component","constructor","args","state","details","user","image","imagePreview","selectedAnnotations","captions","handleInput","e","setState","target","name","value","handleImageChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","handleAnnotationChange","checked","push","filter","annotation","handleSubmit","preventDefault","formData","FormData","append","JSON","stringify","post","headers","then","res","console","log","catch","err","error","componentDidMount","data","get","render","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","annotate","index","type","id","onChange","includes","htmlFor"],"sources":["/home/muskan/Documents/imgFrontend/img-ann/src/App.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n    details: [],\n    user: \"\",\n    image: null,\n    imagePreview: null,\n    selectedAnnotations: [], // State to store selected annotations\n    captions: [\"airplanes\", \"cars\", \"birds\", \"cats\", \"deer\", \"dogs\", \"frogs\", \"horses\", \"ships\", \"trucks\"],\n  };\n\n  componentDidMount() {\n    let data;\n\n    axios\n      .get(\"http://localhost:8000/wel/\")\n      .then((res) => {\n        data = res.data;\n        this.setState({\n          details: data,\n        });\n      })\n      .catch((err) => {});\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleImageChange = (e) => {\n    const file = e.target.files[0];\n\n    this.setState({\n      image: file,\n    });\n\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.setState({\n        imagePreview: reader.result,\n      });\n    };\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  handleAnnotationChange = (e) => {\n    const { value, checked } = e.target;\n    let selectedAnnotations = [...this.state.selectedAnnotations];\n\n    if (checked) {\n      selectedAnnotations.push(value);\n    } else {\n      selectedAnnotations = selectedAnnotations.filter(annotation => annotation !== value);\n    }\n\n    this.setState({ selectedAnnotations });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"name\", this.state.user);\n    formData.append(\"image\", this.state.image);\n    formData.append(\"annotations\", JSON.stringify(this.state.selectedAnnotations));\n\n    axios\n      .post(\"http://localhost:8000/wel/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((res) => {\n        console.log(\"res = \", res);\n        this.setState({\n          user: \"\",\n          image: null,\n          imagePreview: null,\n          selectedAnnotations: [],\n        });\n      })\n      .catch((err) => {\n        console.error(\"Error:\", err);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container jumbotron \">\n        <form onSubmit={this.handleSubmit}>\n          {/* Your existing form inputs */}\n          {/* ... */}\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Annotation</span>\n            </div>\n            {this.state.captions.map((annotate, index) => (\n              <div className=\"form-check form-check-inline\" key={index}>\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id={`annotate-${index}`}\n                  value={annotate}\n                  onChange={this.handleAnnotationChange}\n                  checked={this.state.selectedAnnotations.includes(annotate)}\n                />\n                <label className=\"form-check-label\" htmlFor={`annotate-${index}`}>\n                  {annotate}\n                </label>\n              </div>\n            ))}\n          </div>\n          {/* Your existing form inputs */}\n          {/* ... */}\n          <button type=\"submit\" className=\"btn btn-primary mb-5\">\n            Submit\n          </button>\n        </form>\n        {/* Your existing code to display images */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}