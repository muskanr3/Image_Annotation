{"ast":null,"code":"var _jsxFileName = \"/home/muskan/Documents/imgFrontend/img-ann/src/App.js\";\nimport Multiselect from 'multiselect-react-dropdown';\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      details: [],\n      user: \"\",\n      image: null,\n      // State to store uploaded image\n      imagePreview: null,\n      // State to store image preview\n      annotate: \"\",\n      // State to store selected annotation\n      captions: [\"None\", \"airplanes\", \"cars\", \"birds\", \"cats\", \"deer\", \"dogs\", \"frogs\", \"horses\", \"ships\", \"trucks\"],\n      // Dropdown options\n      annotations: [\"None\"]\n    };\n    this.renderSwitch = param => {\n      switch (param + 1) {\n        case 1:\n          return \"primary \";\n        case 2:\n          return \"secondary\";\n        case 3:\n          return \"success\";\n        case 4:\n          return \"danger\";\n        case 5:\n          return \"warning\";\n        case 6:\n          return \"info\";\n        default:\n          return \"yellow\";\n      }\n    };\n    this.handleInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    // handleImageChange = (e) => {\n    //   const file = e.target.files[0];\n    //   // Update image state\n    //   this.setState({\n    //     image: file,\n    //   });\n    //   // Create a FileReader instance\n    //   const reader = new FileReader();\n    //   // Listen for the FileReader load event\n    //   reader.onloadend = () => {\n    //     this.setState({\n    //       imagePreview: reader.result, // Set imagePreview to the base64 encoded image data\n    //     });\n    //   };\n    //   // Read the image file as a data URL\n    //   if (file) {\n    //     reader.readAsDataURL(file);\n    //   }\n    // };\n    this.handleImageChange = e => {\n      const files = e.target.files;\n\n      // Update image state with an array of files\n      this.setState({\n        image: files\n      });\n\n      // Create a FileReader instance for each file\n      const imagePreviews = [];\n      for (let i = 0; i < files.length; i++) {\n        const reader = new FileReader();\n\n        // Listen for the FileReader load event\n        reader.onloadend = () => {\n          // Set imagePreview to the base64 encoded image data for each file\n          imagePreviews.push(reader.result);\n\n          // If all files have been processed, update imagePreview state\n          if (imagePreviews.length === files.length) {\n            this.setState({\n              imagePreview: imagePreviews\n            });\n          }\n        };\n\n        // Read the image file as a data URL\n        if (files[i]) {\n          reader.readAsDataURL(files[i]);\n        }\n      }\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append(\"name\", this.state.user);\n\n      // Append each file to the FormData object\n      if (Array.isArray(this.state.image)) {\n        for (let i = 0; i < this.state.image.length; i++) {\n          formData.append(\"image\", this.state.image[i]);\n        }\n      } else {\n        formData.append(\"image\", this.state.image);\n      }\n      formData.append(\"annotations\", JSON.stringify(this.state.annotations)); // Convert annotations array to JSON string\n\n      axios.post(\"http://localhost:8000/wel/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log(\"res = \", res);\n        this.setState({\n          user: \"\",\n          image: null,\n          imagePreview: null,\n          // annotate: \"\",\n          annotations: []\n        });\n      }).catch(err => {\n        console.error(\"Error:\", err);\n      });\n    };\n    this.handleAnnotationChange = e => {\n      const selectedOptions = Array.from(e.target.selectedOptions, option => option.value);\n      this.setState({\n        annotations: selectedOptions\n      });\n    };\n  }\n  componentDidMount() {\n    let data;\n    axios.get(\"http://localhost:8000/wel/\").then(res => {\n      data = res.data;\n      this.setState({\n        details: data\n      });\n    }).catch(err => {});\n  }\n  render() {\n    const pendingImages = this.state.details.filter(detail => detail.annotations.includes(\"None\"));\n\n    // Filter images with annotations other than \"None\"\n    const annotatedImages = this.state.details.filter(detail => !detail.annotations.includes(\"None\"));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container jumbotron \",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              id: \"basic-addon1\",\n              children: [\" \", \"Author\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Name of the Poet/Author\",\n            \"aria-label\": \"Username\",\n            \"aria-describedby\": \"basic-addon1\",\n            value: this.state.user,\n            name: \"user\",\n            onChange: this.handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            onChange: this.handleImageChange,\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), this.state.imagePreview &&\n        /*#__PURE__*/\n        // Render image preview if available\n        _jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.imagePreview,\n            alt: \"Preview\",\n            className: \"img-fluid\",\n            style: {\n              maxWidth: \"200px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: \"Caption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: this.state.annotations,\n            onChange: this.handleAnnotationChange,\n            name: \"annotations\",\n            multiple: true // Add the 'multiple' attribute to enable multiple selections\n            ,\n            children: this.state.captions.map((annotate, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: annotate,\n              children: annotate\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mb-5\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          color: \"#000000\",\n          backgroundColor: \"#000000\",\n          height: 0.5,\n          borderColor: \"#000000\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container jumbotron\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          style: flexdi,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 7\n            }, this), pendingImages.map((detail, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Author: \", detail.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:3000/set.png`,\n                alt: \"Image\",\n                className: \"img-fluid mt-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"annotations\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Annotations:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: detail.annotations.map((annotation, index) => (\n                  // printing the annotations\n                  console.log(\"imgpath = \", detail.image_path), console.log(\"annotation = \", annotation), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: annotation\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 17\n                  }, this)))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"border border-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 11\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 9\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Annotated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 7\n            }, this), annotatedImages.map((detail, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Author: \", detail.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:3000/set.png`,\n                alt: \"Image\",\n                className: \"img-fluid mt-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"annotations\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Annotations:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: detail.annotations.map((annotation, index) => (\n                  // printing the annotations\n                  console.log(\"imgpath = \", detail.image_path), console.log(\"annotation = \", annotation), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: annotation\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 17\n                  }, this)))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"border border-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 11\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 9\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Multiselect","React","axios","jsxDEV","_jsxDEV","App","Component","constructor","args","state","details","user","image","imagePreview","annotate","captions","annotations","renderSwitch","param","handleInput","e","setState","target","name","value","handleImageChange","files","imagePreviews","i","length","reader","FileReader","onloadend","push","result","readAsDataURL","handleSubmit","preventDefault","formData","FormData","append","Array","isArray","JSON","stringify","post","headers","then","res","console","log","catch","err","error","handleAnnotationChange","selectedOptions","from","option","componentDidMount","data","get","render","pendingImages","filter","detail","includes","annotatedImages","className","children","onSubmit","id","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","multiple","src","alt","style","maxWidth","map","index","color","backgroundColor","height","borderColor","flexdi","annotation","image_path"],"sources":["/home/muskan/Documents/imgFrontend/img-ann/src/App.js"],"sourcesContent":["import Multiselect from 'multiselect-react-dropdown';\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n    details: [],\n    user: \"\",\n    image: null, // State to store uploaded image\n    imagePreview: null, // State to store image preview\n    annotate: \"\", // State to store selected annotation\n    captions: [\"None\", \"airplanes\", \"cars\", \"birds\", \"cats\", \"deer\", \"dogs\", \"frogs\", \"horses\", \"ships\", \"trucks\"], // Dropdown options\n    annotations: [\"None\"],\n  };\n\n  componentDidMount() {\n    let data;\n\n    axios\n      .get(\"http://localhost:8000/wel/\")\n      .then((res) => {\n        data = res.data;\n        this.setState({\n          details: data,\n        });\n      })\n      .catch((err) => { });\n  }\n\n  renderSwitch = (param) => {\n    switch (param + 1) {\n      case 1:\n        return \"primary \";\n      case 2:\n        return \"secondary\";\n      case 3:\n        return \"success\";\n      case 4:\n        return \"danger\";\n      case 5:\n        return \"warning\";\n      case 6:\n        return \"info\";\n      default:\n        return \"yellow\";\n    }\n  };\n\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // handleImageChange = (e) => {\n  //   const file = e.target.files[0];\n\n  //   // Update image state\n  //   this.setState({\n  //     image: file,\n  //   });\n\n  //   // Create a FileReader instance\n  //   const reader = new FileReader();\n\n  //   // Listen for the FileReader load event\n  //   reader.onloadend = () => {\n  //     this.setState({\n  //       imagePreview: reader.result, // Set imagePreview to the base64 encoded image data\n  //     });\n  //   };\n\n  //   // Read the image file as a data URL\n  //   if (file) {\n  //     reader.readAsDataURL(file);\n  //   }\n  // };\n\n  handleImageChange = (e) => {\n    const files = e.target.files;\n  \n    // Update image state with an array of files\n    this.setState({\n      image: files,\n    });\n  \n    // Create a FileReader instance for each file\n    const imagePreviews = [];\n    for (let i = 0; i < files.length; i++) {\n      const reader = new FileReader();\n  \n      // Listen for the FileReader load event\n      reader.onloadend = () => {\n        // Set imagePreview to the base64 encoded image data for each file\n        imagePreviews.push(reader.result);\n  \n        // If all files have been processed, update imagePreview state\n        if (imagePreviews.length === files.length) {\n          this.setState({\n            imagePreview: imagePreviews,\n          });\n        }\n      };\n  \n      // Read the image file as a data URL\n      if (files[i]) {\n        reader.readAsDataURL(files[i]);\n      }\n    }\n  };\n  \n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  \n    const formData = new FormData();\n    formData.append(\"name\", this.state.user);\n    \n    // Append each file to the FormData object\n    if (Array.isArray(this.state.image)) {\n      for (let i = 0; i < this.state.image.length; i++) {\n        formData.append(\"image\", this.state.image[i]);\n      }\n    } else {\n      formData.append(\"image\", this.state.image);\n    }\n  \n    formData.append(\"annotations\", JSON.stringify(this.state.annotations)); // Convert annotations array to JSON string\n  \n    axios\n      .post(\"http://localhost:8000/wel/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((res) => {\n        console.log(\"res = \", res);\n        this.setState({\n          user: \"\",\n          image: null,\n          imagePreview: null,\n          // annotate: \"\",\n          annotations: [],\n        });\n      })\n      .catch((err) => {\n        console.error(\"Error:\", err);\n      });\n  };\n  \n\n  handleAnnotationChange = (e) => {\n    const selectedOptions = Array.from(e.target.selectedOptions, (option) => option.value);\n    this.setState({ annotations: selectedOptions });\n  };\n\n\n  render() {\n    const pendingImages = this.state.details.filter(detail => detail.annotations.includes(\"None\"));\n\n    // Filter images with annotations other than \"None\"\n    const annotatedImages = this.state.details.filter(detail => !detail.annotations.includes(\"None\"));\n\n    return (\n      <div className=\"container jumbotron \">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\" id=\"basic-addon1\">\n                {\" \"}\n                Author{\" \"}\n              </span>\n            </div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Name of the Poet/Author\"\n              aria-label=\"Username\"\n              aria-describedby=\"basic-addon1\"\n              value={this.state.user}\n              name=\"user\"\n              onChange={this.handleInput}\n            />\n          </div>\n\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Upload Image</span>\n            </div>\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              onChange={this.handleImageChange}\n              multiple\n            />\n          </div>\n\n          {this.state.imagePreview && ( // Render image preview if available\n            <div className=\"mb-3\">\n              <img\n                src={this.state.imagePreview}\n                alt=\"Preview\"\n                className=\"img-fluid\"\n                style={{ maxWidth: \"200px\" }}\n              />\n            </div>\n          )}\n\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Caption</span>\n            </div>\n            <select\n              className=\"form-control\"\n              value={this.state.annotations}\n              onChange={this.handleAnnotationChange}\n              name=\"annotations\"\n              multiple // Add the 'multiple' attribute to enable multiple selections\n            >\n              {this.state.captions.map((annotate, index) => (\n                <option key={index} value={annotate}>\n                  {annotate}\n                </option>\n              ))}\n            </select>\n\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary mb-5\">\n            Submit\n          </button>\n        </form>\n\n        <hr\n          style={{\n            color: \"#000000\",\n            backgroundColor: \"#000000\",\n            height: 0.5,\n            borderColor: \"#000000\",\n          }}\n        />\n<div className=\"container jumbotron\">\n  <div className=\"row\" style={flexdi}>\n    <div className=\"col-md-6\">\n      <h3>Pending</h3>\n      {pendingImages.map((detail, id) => (\n        <div key={id}>\n          <h5>Author: {detail.name}</h5>\n          <img\n            src={`http://localhost:3000/set.png`}\n            alt=\"Image\"\n            className=\"img-fluid mt-3\"\n          />\n          <div className=\"annotations\">\n            <h5>Annotations:</h5>\n            <ul>\n              {detail.annotations.map((annotation, index) => (\n                // printing the annotations\n                console.log(\"imgpath = \", detail.image_path),\n                console.log(\"annotation = \", annotation),\n                <li key={index}>{annotation}</li>\n              ))}\n            </ul>\n          </div>\n          <span className=\"border border-primary\"></span>\n        </div>\n      ))}\n    </div>\n    <div className=\"col-md-6\">\n      <h3>Annotated</h3>\n      {annotatedImages.map((detail, id) => (\n        <div key={id}>\n          <h5>Author: {detail.name}</h5>\n          <img\n            src={`http://localhost:3000/set.png`}\n            alt=\"Image\"\n            className=\"img-fluid mt-3\"\n          />\n          <div className=\"annotations\">\n            <h5>Annotations:</h5>\n            <ul>\n              {detail.annotations.map((annotation, index) => (\n                // printing the annotations\n                console.log(\"imgpath = \", detail.image_path),\n                console.log(\"annotation = \", annotation),\n                <li key={index}>{annotation}</li>\n              ))}\n            </ul>\n          </div>\n          <span className=\"border border-primary\"></span>\n        </div>\n      ))}\n    </div>\n  </div>\n</div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}