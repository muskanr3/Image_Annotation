{"ast":null,"code":"/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nvar jpeg = require('./jpeg'),\n  exif = require('./exif'),\n  simplify = require('./simplify');\nfunction ExifResult(startMarker, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset) {\n  this.startMarker = startMarker;\n  this.tags = tags;\n  this.imageSize = imageSize;\n  this.thumbnailOffset = thumbnailOffset;\n  this.thumbnailLength = thumbnailLength;\n  this.thumbnailType = thumbnailType;\n  this.app1Offset = app1Offset;\n}\nExifResult.prototype = {\n  hasThumbnail: function (mime) {\n    if (!this.thumbnailOffset || !this.thumbnailLength) {\n      return false;\n    }\n    if (typeof mime !== 'string') {\n      return true;\n    }\n    if (mime.toLowerCase().trim() === 'image/jpeg') {\n      return this.thumbnailType === 6;\n    }\n    if (mime.toLowerCase().trim() === 'image/tiff') {\n      return this.thumbnailType === 1;\n    }\n    return false;\n  },\n  getThumbnailOffset: function () {\n    return this.app1Offset + 6 + this.thumbnailOffset;\n  },\n  getThumbnailLength: function () {\n    return this.thumbnailLength;\n  },\n  getThumbnailBuffer: function () {\n    return this._getThumbnailStream().nextBuffer(this.thumbnailLength);\n  },\n  _getThumbnailStream: function () {\n    return this.startMarker.openWithOffset(this.getThumbnailOffset());\n  },\n  getImageSize: function () {\n    return this.imageSize;\n  },\n  getThumbnailSize: function () {\n    var stream = this._getThumbnailStream(),\n      size;\n    jpeg.parseSections(stream, function (sectionType, sectionStream) {\n      if (jpeg.getSectionName(sectionType).name === 'SOF') {\n        size = jpeg.getSizeFromSOFSection(sectionStream);\n      }\n    });\n    return size;\n  }\n};\nfunction Parser(stream) {\n  this.stream = stream;\n  this.flags = {\n    readBinaryTags: false,\n    resolveTagNames: true,\n    simplifyValues: true,\n    imageSize: true,\n    hidePointers: true,\n    returnTags: true\n  };\n}\nParser.prototype = {\n  enableBinaryFields: function (enable) {\n    this.flags.readBinaryTags = !!enable;\n    return this;\n  },\n  enablePointers: function (enable) {\n    this.flags.hidePointers = !enable;\n    return this;\n  },\n  enableTagNames: function (enable) {\n    this.flags.resolveTagNames = !!enable;\n    return this;\n  },\n  enableImageSize: function (enable) {\n    this.flags.imageSize = !!enable;\n    return this;\n  },\n  enableReturnTags: function (enable) {\n    this.flags.returnTags = !!enable;\n    return this;\n  },\n  enableSimpleValues: function (enable) {\n    this.flags.simplifyValues = !!enable;\n    return this;\n  },\n  parse: function () {\n    var start = this.stream.mark(),\n      stream = start.openWithOffset(0),\n      flags = this.flags,\n      tags,\n      imageSize,\n      thumbnailOffset,\n      thumbnailLength,\n      thumbnailType,\n      app1Offset,\n      tagNames,\n      getTagValue,\n      setTagValue;\n    if (flags.resolveTagNames) {\n      tagNames = require('./exif-tags');\n    }\n    if (flags.resolveTagNames) {\n      tags = {};\n      getTagValue = function (t) {\n        return tags[t.name];\n      };\n      setTagValue = function (t, value) {\n        tags[t.name] = value;\n      };\n    } else {\n      tags = [];\n      getTagValue = function (t) {\n        var i;\n        for (i = 0; i < tags.length; ++i) {\n          if (tags[i].type === t.type && tags[i].section === t.section) {\n            return tags.value;\n          }\n        }\n      };\n      setTagValue = function (t, value) {\n        var i;\n        for (i = 0; i < tags.length; ++i) {\n          if (tags[i].type === t.type && tags[i].section === t.section) {\n            tags.value = value;\n            return;\n          }\n        }\n      };\n    }\n    jpeg.parseSections(stream, function (sectionType, sectionStream) {\n      var validExifHeaders,\n        sectionOffset = sectionStream.offsetFrom(start);\n      if (sectionType === 0xE1) {\n        validExifHeaders = exif.parseTags(sectionStream, function (ifdSection, tagType, value, format) {\n          //ignore binary fields if disabled\n          if (!flags.readBinaryTags && format === 7) {\n            return;\n          }\n          if (tagType === 0x0201) {\n            thumbnailOffset = value[0];\n            if (flags.hidePointers) {\n              return;\n            }\n          } else if (tagType === 0x0202) {\n            thumbnailLength = value[0];\n            if (flags.hidePointers) {\n              return;\n            }\n          } else if (tagType === 0x0103) {\n            thumbnailType = value[0];\n            if (flags.hidePointers) {\n              return;\n            }\n          }\n          //if flag is set to not store tags, return here after storing pointers\n          if (!flags.returnTags) {\n            return;\n          }\n          if (flags.simplifyValues) {\n            value = simplify.simplifyValue(value, format);\n          }\n          if (flags.resolveTagNames) {\n            var sectionTagNames = ifdSection === exif.GPSIFD ? tagNames.gps : tagNames.exif;\n            var name = sectionTagNames[tagType];\n            if (!name) {\n              name = tagNames.exif[tagType];\n            }\n            if (!tags.hasOwnProperty(name)) {\n              tags[name] = value;\n            }\n          } else {\n            tags.push({\n              section: ifdSection,\n              type: tagType,\n              value: value\n            });\n          }\n        });\n        if (validExifHeaders) {\n          app1Offset = sectionOffset;\n        }\n      } else if (flags.imageSize && jpeg.getSectionName(sectionType).name === 'SOF') {\n        imageSize = jpeg.getSizeFromSOFSection(sectionStream);\n      }\n    });\n    if (flags.simplifyValues) {\n      simplify.castDegreeValues(getTagValue, setTagValue);\n      simplify.castDateValues(getTagValue, setTagValue);\n    }\n    return new ExifResult(start, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset);\n  }\n};\nmodule.exports = Parser;","map":{"version":3,"names":["jpeg","require","exif","simplify","ExifResult","startMarker","tags","imageSize","thumbnailOffset","thumbnailLength","thumbnailType","app1Offset","prototype","hasThumbnail","mime","toLowerCase","trim","getThumbnailOffset","getThumbnailLength","getThumbnailBuffer","_getThumbnailStream","nextBuffer","openWithOffset","getImageSize","getThumbnailSize","stream","size","parseSections","sectionType","sectionStream","getSectionName","name","getSizeFromSOFSection","Parser","flags","readBinaryTags","resolveTagNames","simplifyValues","hidePointers","returnTags","enableBinaryFields","enable","enablePointers","enableTagNames","enableImageSize","enableReturnTags","enableSimpleValues","parse","start","mark","tagNames","getTagValue","setTagValue","t","value","i","length","type","section","validExifHeaders","sectionOffset","offsetFrom","parseTags","ifdSection","tagType","format","simplifyValue","sectionTagNames","GPSIFD","gps","hasOwnProperty","push","castDegreeValues","castDateValues","module","exports"],"sources":["/home/muskan/imgFrontend/img-ann/node_modules/exif-parser/lib/parser.js"],"sourcesContent":["/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nvar jpeg = require('./jpeg'),\n\texif = require('./exif'),\n\tsimplify = require('./simplify');\n\nfunction ExifResult(startMarker, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset) {\n\tthis.startMarker = startMarker;\n\tthis.tags = tags;\n\tthis.imageSize = imageSize;\n\tthis.thumbnailOffset = thumbnailOffset;\n\tthis.thumbnailLength = thumbnailLength;\n\tthis.thumbnailType = thumbnailType;\n\tthis.app1Offset = app1Offset;\n}\n\nExifResult.prototype = {\n\thasThumbnail: function(mime) {\n\t\tif(!this.thumbnailOffset || !this.thumbnailLength) {\n\t\t\treturn false;\n\t\t}\n\t\tif(typeof mime !== 'string') {\n\t\t\treturn true;\n\t\t}\n\t\tif(mime.toLowerCase().trim() === 'image/jpeg') {\n\t\t\treturn this.thumbnailType === 6;\n\t\t}\n\t\tif(mime.toLowerCase().trim() === 'image/tiff') {\n\t\t\treturn this.thumbnailType === 1;\n\t\t}\n\t\treturn false;\n\t},\n\tgetThumbnailOffset: function() {\n\t\treturn this.app1Offset + 6 + this.thumbnailOffset;\n\t},\n\tgetThumbnailLength: function() {\n\t\treturn this.thumbnailLength;\n\t},\n\tgetThumbnailBuffer: function() {\n\t\treturn this._getThumbnailStream().nextBuffer(this.thumbnailLength);\n\t},\n\t_getThumbnailStream: function() {\n\t\treturn this.startMarker.openWithOffset(this.getThumbnailOffset());\n\t},\n\tgetImageSize: function() {\n\t\treturn this.imageSize;\n\t},\n\tgetThumbnailSize: function() {\n\t\tvar stream = this._getThumbnailStream(), size;\n\t\tjpeg.parseSections(stream, function(sectionType, sectionStream) {\n\t\t\tif(jpeg.getSectionName(sectionType).name === 'SOF') {\n\t\t\t\tsize = jpeg.getSizeFromSOFSection(sectionStream);\n\t\t\t}\n\t\t});\n\t\treturn size;\n\t}\n};\n\nfunction Parser(stream) {\n\tthis.stream = stream;\n\tthis.flags = {\n\t\treadBinaryTags: false,\n\t\tresolveTagNames: true,\n\t\tsimplifyValues: true,\n\t\timageSize: true,\n\t\thidePointers: true,\n\t\treturnTags: true\n\t};\n}\n\nParser.prototype = {\n\tenableBinaryFields: function(enable) {\n\t\tthis.flags.readBinaryTags = !!enable;\n\t\treturn this;\n\t},\n\tenablePointers: function(enable) {\n\t\tthis.flags.hidePointers = !enable;\n\t\treturn this;\n\t},\n\tenableTagNames: function(enable) {\n\t\tthis.flags.resolveTagNames = !!enable;\n\t\treturn this;\n\t},\n\tenableImageSize: function(enable) {\n\t\tthis.flags.imageSize = !!enable;\n\t\treturn this;\n\t},\n\tenableReturnTags: function(enable) {\n\t\tthis.flags.returnTags = !!enable;\n\t\treturn this;\n\t},\n\tenableSimpleValues: function(enable) {\n\t\tthis.flags.simplifyValues = !!enable;\n\t\treturn this;\n\t},\n\tparse: function() {\n\t\tvar start = this.stream.mark(),\n\t\t\tstream = start.openWithOffset(0),\n\t\t\tflags = this.flags,\n\t\t\ttags,\n\t\t\timageSize,\n\t\t\tthumbnailOffset,\n\t\t\tthumbnailLength,\n\t\t\tthumbnailType,\n\t\t\tapp1Offset,\n\t\t\ttagNames,\n\t\t\tgetTagValue, setTagValue;\n\t\tif(flags.resolveTagNames) {\n\t\t\ttagNames = require('./exif-tags');\n\t\t}\n\t\tif(flags.resolveTagNames) {\n\t\t\ttags = {};\n\t\t\tgetTagValue = function(t) {\n\t\t\t\treturn tags[t.name];\n\t\t\t};\n\t\t\tsetTagValue = function(t, value) {\n\t\t\t\ttags[t.name] = value;\n\t\t\t};\n\t\t} else {\n\t\t\ttags = [];\n\t\t\tgetTagValue = function(t) {\n\t\t\t\tvar i;\n\t\t\t\tfor(i = 0; i < tags.length; ++i) {\n\t\t\t\t\tif(tags[i].type === t.type && tags[i].section === t.section) {\n\t\t\t\t\t\treturn tags.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTagValue = function(t, value) {\n\t\t\t\tvar i;\n\t\t\t\tfor(i = 0; i < tags.length; ++i) {\n\t\t\t\t\tif(tags[i].type === t.type && tags[i].section === t.section) {\n\t\t\t\t\t\ttags.value = value;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tjpeg.parseSections(stream, function(sectionType, sectionStream) {\n\t\t\tvar validExifHeaders, sectionOffset = sectionStream.offsetFrom(start);\n\t\t\tif(sectionType === 0xE1) {\n\t\t\t\tvalidExifHeaders = exif.parseTags(sectionStream, function(ifdSection, tagType, value, format) {\n\t\t\t\t\t//ignore binary fields if disabled\n\t\t\t\t\tif(!flags.readBinaryTags && format === 7) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(tagType === 0x0201) {\n\t\t\t\t\t\tthumbnailOffset = value[0];\n\t\t\t\t\t\tif(flags.hidePointers) {return;}\n\t\t\t\t\t} else if(tagType === 0x0202) {\n\t\t\t\t\t\tthumbnailLength = value[0];\n\t\t\t\t\t\tif(flags.hidePointers) {return;}\n\t\t\t\t\t} else if(tagType === 0x0103) {\n\t\t\t\t\t\tthumbnailType = value[0];\n\t\t\t\t\t\tif(flags.hidePointers) {return;}\n\t\t\t\t\t}\n\t\t\t\t\t//if flag is set to not store tags, return here after storing pointers\n\t\t\t\t\tif(!flags.returnTags) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(flags.simplifyValues) {\n\t\t\t\t\t\tvalue = simplify.simplifyValue(value, format);\n\t\t\t\t\t}\n\t\t\t\t\tif(flags.resolveTagNames) {\n\t\t\t\t\t\tvar sectionTagNames = ifdSection === exif.GPSIFD ? tagNames.gps : tagNames.exif;\n\t\t\t\t\t\tvar name = sectionTagNames[tagType];\n\t\t\t\t\t\tif(!name) {\n\t\t\t\t\t\t\tname = tagNames.exif[tagType];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tags.hasOwnProperty(name)) {\n\t\t\t\t\t\t\ttags[name] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttags.push({\n\t\t\t\t\t\t\tsection: ifdSection,\n\t\t\t\t\t\t\ttype: tagType,\n\t\t\t\t\t\t\tvalue: value\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(validExifHeaders) {\n\t\t\t\t\tapp1Offset = sectionOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(flags.imageSize && jpeg.getSectionName(sectionType).name === 'SOF') {\n\t\t\t\timageSize = jpeg.getSizeFromSOFSection(sectionStream);\n\t\t\t}\n\t\t});\n\n\t\tif(flags.simplifyValues) {\n\t\t\tsimplify.castDegreeValues(getTagValue, setTagValue);\n\t\t\tsimplify.castDateValues(getTagValue, setTagValue);\n\t\t}\n\n\t\treturn new ExifResult(start, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset);\n\t}\n};\n\n\n\nmodule.exports = Parser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}